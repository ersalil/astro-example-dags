name: Astronomer CI - Deploy dbt code

on:
  push:
    branches:
      - dbt-only
  
env:
  ASTRO_API_TOKEN: ${{ secrets.ASTRO_API_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout dbt-only branch
      uses: actions/checkout@v4
      with:
        ref: dbt-only
        fetch-depth: 0 # Ensure full history is fetched

    - name: Deploy to Astro
      id: deploy
      uses: astronomer/deploy-action@v0.10.0
      with:
        deployment-id: cm82uf92v0xr301efhf1xaevl
        deploy-type: dbt
        root-folder: dbt/my_simple_dbt_project
        mount-path: /tmp/my_simple_dbt_project

    - name: Add test variable to GitHub output
      id: test_output
      run: |
        echo "TEST_VARIABLE=HelloWorld" >> $GITHUB_OUTPUT
    
    - name: Debug GITHUB_OUTPUT path
      run: |
        echo "Checking GITHUB_OUTPUT file:"
        ls -l $GITHUB_OUTPUT || echo "GITHUB_OUTPUT not found"
        cat $GITHUB_OUTPUT || echo "GITHUB_OUTPUT is empty"

    - name: Debug deploy shell environment
      run: |
        echo "Checking shell environment"
        /usr/bin/bash --noprofile --norc -e -o pipefail -c '
          echo "DBT_DEPLOY: $DBT_DEPLOY"
          echo "options: $options"
          echo "GITHUB_OUTPUT: $GITHUB_OUTPUT"
        '

    # Check the exact outputs from deploy-action
    - name: Show deploy outputs
      run: |
        echo "DBT_DEPLOY=${{ steps.deploy.outputs.DBT_DEPLOY }}"
        echo "DBT_OPTIONS=${{ steps.deploy.outputs.DBT_OPTIONS }}"
        echo "TEST_VARIABLE=${{ steps.test_output.outputs.TEST_VARIABLE }}"

    # Use JSON to capture all outputs from deploy-action
    - name: Capture all deploy outputs
      run: |
        echo "All outputs from deploy step:"
        echo '${{ toJSON(steps.deploy.outputs) }}' | jq .

    # Check what GitHub Actions 'sees' after the deploy step
    - name: Debug all outputs
      run: |
        echo "==== ALL STEP OUTPUTS ===="
        echo '${{ toJSON(steps) }}' | jq .
